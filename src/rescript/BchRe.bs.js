// Generated by ReScript, PLEASE EDIT WITH CARE

const defaultRestApi = 'https://api.fullstack.cash/v5/'

const bitcoincash = require('./bitcoincash')

const crypto = require('./crypto')

const until = require('./util')

const blockchain = require('./blockchain')

const control = require('./control')

const generating = require('./generating')

const mining = require('./mining')

const rawTransactions = require('./raw-transactions')

const mnemonic = require('./mnemonic')

const address = require('./address')

const hdNode = require('./hdnode')

const transactionBuilder = require('./transaction-builder')

const ecPair = require('./ecpair')

const script = require('./script')

const price = require('./price')

const schnorr = require('./schnorr')

const slp = require('./slp/slp')

const encryption = require('./encryption')

const utxo = require('./utxo')

const transaction = require('./transaction')

const dsProof = require('./dsproof')

const eCash = require('./ecash')

function constructor (config) {
  if (config === undefined) {
    const url = process.env.RESTURL
    url !== undefined
  }
  if (config === undefined) {
    process.env.BCHJSTOKEN
  }
  const authPass = config !== undefined ? config : process.env.BCHJSAUTHPASS
  const combined = 'fullstackcash:' + authPass + ''
  Buffer.from(combined)
}

const BCHJS = {
  constructor: constructor
}

export {
  defaultRestApi,
  bitcoincash,
  crypto,
  until,
  blockchain,
  control,
  generating,
  mining,
  rawTransactions,
  mnemonic,
  address,
  hdNode,
  transactionBuilder,
  ecPair,
  script,
  price,
  schnorr,
  slp,
  encryption,
  utxo,
  transaction,
  dsProof,
  eCash,
  BCHJS
}
/* bitcoincash Not a pure module */
